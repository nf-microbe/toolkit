/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running FastQ tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a FastQ pipeline test.

    Use as follows:
        nextflow run nf-microbe/toolkit -profile test_fastq,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Test full FastQ functionality'
    config_profile_description = 'Full FastQ dataset to check pipeline function'

    // PIPELINE OPTIONS
    // Input/output
    input                       = "${projectDir}/assets/test-datasets/samplesheets/test_fastq_samplesheet.csv"
    fastqs                      = ["${projectDir}/assets/test-datasets/fastqs/*_{1,2}.fastq.gz", "${projectDir}/assets/test-datasets/fastqs/*se.fastq.gz"]
    fastas                      = "${projectDir}/assets/test-datasets/fastas/*.fasta.gz"
    sra_accessions              = "${projectDir}/assets/test-datasets/samplesheets/test_sra.csv"
    outdir                      = "${projectDir}/results"
    // READ DOWNLOAD OPTIONS
    download_sra_fastqs         = true
    // READ PREPROCESSING OPTIONS
    run_fastp                   = true
    fastp_args                  = null
    // HOST READ REMOVAL OPTIONS
    run_bowtie2_host_removal    = true
    bowtie2_host_removal_args   = null
    igenomes_host_key           = 'EB2'
    host_fasta                  = null
    host_bowtie2_index          = null
    // VIRUS ENRICHMENT EVALUATION OPTIONS
    run_viromeqc                = true
    viromeqc_db                 = null
    viromeqc_args               = null
    // READ MERGING OPTIONS
    perform_run_merging         = true
    // LOGAN MULTIPLIED DOWNLOAD OPTIONS
    download_logan_mult_contigs = true
    download_logan_mult_unitigs = true
    logan_mult_min_abund        = 0
    // ASSEMBLY DOWNLOAD OPTIONS
    download_logan_contigs      = true
    // READ ASSEMBLY OPTIONS
    run_megahit_single          = true
    run_megahit_coassembly      = true
    megahit_args                = null
    run_spades_single           = true
    run_spades_coassembly       = true
    spades_args                 = "--meta"
    use_spades_scaffolds        = true
    run_penguin_single          = true
    run_penguin_coassembly      = true
    penguin_args                = null
    // ASSEMBLY EXTENSION OPTIONS
    run_cobra                   = true
    cobra_min_len               = 10000
    cobra_coverm_args           = null
    cobra_args                  = null
    run_phables                 = true
    phables_db                  = null
    phables_args                = null
    // ASSEMBLY QC OPTIONS
    assembly_min_len            = 1500
    run_seqkit_stats            = true
    run_trfinder                = true
    trfinder_args               = null
    use_trfinder_fasta          = false
    prepend_sample_id           = true
    // ASSEMBLY SPLIT OPTIONS
    assembly_split_size         = 100000
    // MGE CLASSIFICATION OPTIONS
    run_genomad                 = true
    genomad_db                  = null
    genomad_args                = null
    run_pyhmmer_virus           = true
    run_pyhmmer_plasmid         = true
    run_pyhmmer_busco           = true
    // MGE QC FILTERING OPTIONS
    run_nucleotide_stats        = true
    run_tantan                  = true
    tantan_args                 = "-s 0.9"
    // ASSEMBLY DEREPLICATION OPTIONS
    run_trtrimmer               = false
    trtrimmer_args              = null
    run_seqhasher               = false
    seqhasher_args              = null
    // VIRUS CLUSTERING OPTIONS
    run_vclust                  = false
    vclust_prefilter_args       = null
    vclust_align_args           = null
    vclust_cluster_args         = null
}
