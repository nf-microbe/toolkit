nextflow_process {

    name "Test Process CHECKV_GENBANKHITS"
    script "../main.nf"
    process "CHECKV_GENBANKHITS"

    tag "modules"
    tag "modules_nfcore"
    tag "checkv"
    tag "checkv/endtoend"
    tag "checkv/downloaddatabase"
    tag "checkv/genbankhits"

    setup {
        run("CHECKV_DOWNLOADDATABASE") {
            script "../../downloaddatabase/main.nf"
        }
    }

    test("bacteroides_fragilis - checkv - aai.tsv") {
        when {
            process {
                """
                input[0] = [
                        [ id:'test' ],
                        file("${projectDir}/assets/test-datasets/genomics/prokaryotes/bacteroides_fragilis/genome/tsv/genome_checkv_aai.tsv", checkIfExists: true)
                ]
                input[1] = "${projectDir}/assets/db/ncbi_info.tsv"
                input[2] = CHECKV_DOWNLOADDATABASE.out.checkv_db
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("checkv - empty aai.tsv") {
        when {
            process {
                """
                input[0] = [
                        [ id:'test' ],
                        file("${projectDir}/assets/test-datasets/genomics/prokaryotes/bacteroides_fragilis/genome/tsv/empty_aai.tsv", checkIfExists: true)
                ]
                input[1] = "${projectDir}/assets/db/ncbi_info.tsv"
                input[2] = CHECKV_DOWNLOADDATABASE.out.checkv_db
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("stub") {
        options "-stub"
        when {
            process {
                """
                input[0] = [
                        [ id:'test' ],
                        file("${projectDir}/assets/test-datasets/genomics/prokaryotes/bacteroides_fragilis/genome/tsv/genome_checkv_aai.tsv", checkIfExists: true)
                ]
                input[1] = "${projectDir}/assets/db/ncbi_info.tsv"
                input[2] = CHECKV_DOWNLOADDATABASE.out.checkv_db
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
            )
        }
    }
}
