#!/usr/bin/env python

import argparse
import csv
import os

import pandas as pd


def parse_args():
    # Create the parser
    parser = argparse.ArgumentParser(description="Parse CheckV outputs for GenBank hits")

    # Add arguments
    parser.add_argument("--checkv_aai", type=str, required=True, help="Path to the CheckV AAI TSV")
    parser.add_argument("--checkv_db", type=str, required=True, help="Path to the CheckV database directory")
    parser.add_argument("--ncbi_tsv", type=str, required=True, help="Path to the NCBI taxonomy file")
    parser.add_argument("--output", type=str, required=True, help="Path to output TSV file generated by script")

    # Parse the arguments
    return vars(parser.parse_args())


def read_checkv_info(path):
    path = os.path.join(path, "genome_db/checkv_info.tsv")
    df = pd.read_csv(path, sep="\t")
    df = df[df["source"] == "NCBI GenBank"]
    df.index = df["checkv_id"]
    return df


def read_ncbi_info(path):
    df = pd.read_csv(path, sep="\t")
    df.index = df["accession"]
    return df


def move_column_after(df, column_to_move, after_column):
    cols = list(df.columns)
    cols.remove(column_to_move)
    idx = cols.index(after_column)
    cols.insert(idx + 1, column_to_move)
    df = df[cols]
    return df


def main():
    args = parse_args()
    ncbi_info = read_ncbi_info(args["ncbi_tsv"])
    checkv_info = read_checkv_info(args["checkv_db"])
    query_to_target = {}
    inpath = args["checkv_aai"]
    outpath = args["output"]
    print(f"Output written to: {outpath}")
    for r in csv.DictReader(open(inpath), delimiter="\t"):
        if r["target"] not in checkv_info.index:
            continue
        elif checkv_info.loc[r["target"]]["contig_id"] not in ncbi_info.index:
            continue
        elif r["query"] in query_to_target:
            continue
        else:
            r["target"] = checkv_info.loc[r["target"]]["contig_id"]
            r["target_name"] = ncbi_info.loc[r["target"]]["organism_name"]
            r["target_taxid"] = ncbi_info.loc[r["target"]]["taxid"]
            query_to_target[r["query"]] = r
    if len(query_to_target.values()) == 0:
        df = pd.DataFrame()
        df.to_csv(outpath, sep="\t", index=False)
    else:
        recs = list(query_to_target.values())
        df = pd.DataFrame(recs)
        df = move_column_after(df, "target_name", "target")
        df = move_column_after(df, "target_taxid", "target_name")
        df.to_csv(outpath, sep="\t", index=False)


if __name__ == "__main__":
    main()


# python checkv_ref_similarity.py \
# --checkv_output ../data/checkv/data.part_001.fna \
# --checkv_db ../../db/checkv-db-v1.5 \
# --ncbi_tsv ncbi_info.tsv
