Changes in module 'nf-core/megahit'
'modules/nf-core/megahit/environment.yml' is unchanged
'modules/nf-core/megahit/meta.yml' is unchanged
Changes in 'megahit/main.nf':
--- modules/nf-core/megahit/main.nf
+++ modules/nf-core/megahit/main.nf
@@ -1,21 +1,23 @@
 process MEGAHIT {
     tag "${meta.id}"
     label 'process_high'
+
     conda "${moduleDir}/environment.yml"
     container "${ workflow.containerEngine == 'singularity' && !task.ext.singularity_pull_docker_container ?
         'oras://community.wave.seqera.io/library/megahit_pigz:657d77006ae5f222' :
         'community.wave.seqera.io/library/megahit_pigz:87a590163e594224' }"
 
     input:
-    tuple val(meta), path(reads1), path(reads2)
+    tuple val(meta), path(reads)
 
     output:
     tuple val(meta), path("*.contigs.fa.gz")                            , emit: contigs
-    tuple val(meta), path("intermediate_contigs/k*.contigs.fa.gz")      , emit: k_contigs
-    tuple val(meta), path("intermediate_contigs/k*.addi.fa.gz")         , emit: addi_contigs
-    tuple val(meta), path("intermediate_contigs/k*.local.fa.gz")        , emit: local_contigs
-    tuple val(meta), path("intermediate_contigs/k*.final.contigs.fa.gz"), emit: kfinal_contigs
-    tuple val(meta), path('*.log')                                      , emit: log
+    // tuple val(meta), path("intermediate_contigs/k*.contigs.fa.gz")      , emit: k_contigs
+    // tuple val(meta), path("intermediate_contigs/k*.addi.fa.gz")         , emit: addi_contigs
+    // tuple val(meta), path("intermediate_contigs/k*.local.fa.gz")        , emit: local_contigs
+    // tuple val(meta), path("intermediate_contigs/k*.final.contigs.fa.gz"), emit: kfinal_contigs
+    tuple val(meta), path("${prefix}.megahit.log")                      , emit: log
+    tuple val(meta), path("${prefix}.gfa.gz")                           , emit: gfa
     path "versions.yml"                                                 , emit: versions
 
     when:
@@ -24,8 +26,8 @@
     script:
     def args = task.ext.args ?: ''
     def args2 = task.ext.args2 ?: ''
-    def prefix = task.ext.prefix ?: "${meta.id}"
-    def reads_command = meta.single_end || !reads2 ? "-r ${reads1}" : "-1 ${reads1.join(',')} -2 ${reads2.join(',')}"
+    prefix = task.ext.prefix ?: "${meta.id}"
+    def reads_command = meta.single_end ? "-r ${reads}" : "-1 ${reads[0]} -2 ${reads[1]}"
     """
     megahit \\
         ${reads_command} \\
@@ -33,6 +35,17 @@
         -t ${task.cpus} \\
         --out-prefix ${prefix}
 
+    # convert contigs to FastG format
+    megahit_toolkit \\
+        contig2fastg \\
+        \$(grep "^>" megahit_out/*.fa | sed 's/>k//; s/_.*//' | head -n 1) \\
+        megahit_out/*.fa > ${prefix}.graph.fastg
+
+    # convert FastG to GFA format
+    fastg2gfa \\
+        ${prefix}.graph.fastg > ${prefix}.gfa
+
+    # gzip megahit contigs
     pigz \\
         --no-name \\
         -p ${task.cpus} \\
@@ -40,7 +53,12 @@
         megahit_out/*.fa \\
         megahit_out/intermediate_contigs/*.fa
 
+    # move output files to top level directory
     mv megahit_out/* .
+    mv ./*log ${prefix}.megahit.log
+
+    # gzip GFA files
+    gzip ${prefix}.gfa ${prefix}.graph.fastg
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":
@@ -51,8 +69,8 @@
     stub:
     def args = task.ext.args ?: ''
     def args2 = task.ext.args2 ?: ''
-    def prefix = task.ext.prefix ?: "${meta.id}"
-    def reads_command = meta.single_end || !reads2 ? "-r ${reads1}" : "-1 ${reads1.join(',')} -2 ${reads2.join(',')}"
+    prefix = task.ext.prefix ?: "${meta.id}"
+    def reads_command = meta.single_end ? "-r ${reads}" : "-1 ${reads[0]} -2 ${reads[1]}"
     """
     mkdir -p intermediate_contigs
     echo "" | gzip > ${prefix}.contigs.fa.gz
@@ -60,7 +78,9 @@
     echo "" | gzip > intermediate_contigs/k21.addi.fa.gz
     echo "" | gzip > intermediate_contigs/k21.local.fa.gz
     echo "" | gzip > intermediate_contigs/k21.final.contigs.fa.gz
-    touch ${prefix}.log
+    touch ${prefix}.megahit.log
+    echo "" | gzip > ${prefix}.graph.fastg.gz
+    echo "" | gzip > ${prefix}.gfa.gz
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":

Changes in 'megahit/tests/main.nf.test':
--- modules/nf-core/megahit/tests/main.nf.test
+++ modules/nf-core/megahit/tests/main.nf.test
@@ -9,112 +9,70 @@
     tag "megahit"
 
     test("sarscov2 - fastq - se") {
-
         when {
             process {
                 """
-                input[0] = [ [id:"test", single_end:true],
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
-                    []]
+                input[0] = [
+                    [id:"test", single_end:true],
+                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
+                ]
                 """
             }
         }
-
         then {
             assertAll(
                 { assert process.success },
-                { assert path(process.out.contigs[0][1]).linesGzip.toString().contains(">k") },
-                { assert process.out.k_contigs[0][1].each{path(it).linesGzip.toString().contains(">k")}},
-                { assert process.out.addi_contigs[0][1].each{path(it).linesGzip.toString().contains(">k")}},
-                { assert process.out.local_contigs[0][1].each{path(it).linesGzip.toString().contains(">k")}},
-                { assert process.out.kfinal_contigs[0][1].each{path(it).linesGzip.toString().contains(">k")}},
                 { assert snapshot(
-                        path(process.out.log[0][1]).readLines().last().contains("ALL DONE. Time elapsed"),
-                        process.out.versions
+                    process.out.contigs,
+                    process.out.gfa,
+                    process.out.versions,
+                    file(process.out.log[0][1]).name
                     ).match()
                 }
             )
         }
-
     }
 
     test("sarscov2 - fastq - pe") {
-
         when {
             process {
                 """
-                input[0] = [ [id:"test", single_end:false],
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
+                input[0] = [
+                    [id:"test", single_end:false],
+                    [
+                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
+                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                     ]
+                ]
                 """
             }
         }
-
         then {
             assertAll(
                 { assert process.success },
-                { assert path(process.out.contigs[0][1]).linesGzip.toString().contains(">k") },
-                { assert process.out.k_contigs[0][1].each{path(it).linesGzip.toString().contains(">k")}},
-                { assert process.out.addi_contigs[0][1].each{path(it).linesGzip.toString().contains(">k")}},
-                { assert process.out.local_contigs[0][1].each{path(it).linesGzip.toString().contains(">k")}},
-                { assert process.out.kfinal_contigs[0][1].each{path(it).linesGzip.toString().contains(">k")}},
                 { assert snapshot(
-                        path(process.out.log[0][1]).readLines().last().contains("ALL DONE. Time elapsed"),
-                        process.out.versions
+                    process.out.contigs,
+                    process.out.gfa,
+                    process.out.versions,
+                    file(process.out.log[0][1]).name
                     ).match()
                 }
             )
         }
-
     }
 
-    test("sarscov2 - fastq - pe - coassembly") {
-
+    test("stub") {
+        options "-stub"
         when {
             process {
                 """
-                input[0] = [ [id:"test", single_end:false],
-                    [ file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true), file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test2_1.fastq.gz', checkIfExists: true)] ,
-                    [ file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true), file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test2_2.fastq.gz', checkIfExists: true)]
-                    ]
+                input[0] = [
+                    [id:"test", single_end:true],
+                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
+                ]
                 """
             }
         }
-
-        then {
-            assertAll(
-                { assert process.success },
-                { assert path(process.out.contigs[0][1]).linesGzip.toString().contains(">k") },
-                { assert process.out.k_contigs[0][1].each{path(it).linesGzip.toString().contains(">k")}},
-                { assert process.out.addi_contigs[0][1].each{path(it).linesGzip.toString().contains(">k")}},
-                { assert process.out.local_contigs[0][1].each{path(it).linesGzip.toString().contains(">k")}},
-                { assert process.out.kfinal_contigs[0][1].each{path(it).linesGzip.toString().contains(">k")}},
-                { assert snapshot(
-                        path(process.out.log[0][1]).readLines().last().contains("ALL DONE. Time elapsed"),
-                        process.out.versions
-                    ).match()
-                }
-            )
-        }
-
-    }
-
-    test("sarscov2 - stub") {
-
-        options "-stub"
-
-        when {
-            process {
-                """
-                input[0] = [ [id:"test", single_end:true],
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
-                    []
-                    ]
-                """
-            }
-        }
-
         then {
             assertAll(
                 { assert process.success },
@@ -122,5 +80,4 @@
             )
         }
     }
-
 }

Changes in 'megahit/tests/main.nf.test.snap':
--- modules/nf-core/megahit/tests/main.nf.test.snap
+++ modules/nf-core/megahit/tests/main.nf.test.snap
@@ -1,31 +1,67 @@
 {
     "sarscov2 - fastq - se": {
         "content": [
-            true,
             [
-                "versions.yml:md5,e3c0731297c9abe2f495ab6d541ac0e6"
-            ]
+                [
+                    {
+                        "id": "test",
+                        "single_end": true
+                    },
+                    "test.contigs.fa.gz:md5,06b460f221b75d26dd65ec8bfff45bf6"
+                ]
+            ],
+            [
+                [
+                    {
+                        "id": "test",
+                        "single_end": true
+                    },
+                    "test.gfa.gz:md5,617ff12a7a83eebe21ce38eb199309d5"
+                ]
+            ],
+            [
+                "versions.yml:md5,a2ec8dfa9f8dd51d9adf237ed133a2b3"
+            ],
+            "test.megahit.log"
         ],
         "meta": {
-            "nf-test": "0.8.4",
+            "nf-test": "0.9.0",
             "nextflow": "24.04.4"
         },
-        "timestamp": "2024-09-12T16:45:42.387947698"
+        "timestamp": "2024-09-13T11:53:03.041935086"
     },
     "sarscov2 - fastq - pe": {
         "content": [
-            true,
             [
-                "versions.yml:md5,e3c0731297c9abe2f495ab6d541ac0e6"
-            ]
+                [
+                    {
+                        "id": "test",
+                        "single_end": false
+                    },
+                    "test.contigs.fa.gz:md5,1837b0488e3ddce5d1df96d7195c0e9f"
+                ]
+            ],
+            [
+                [
+                    {
+                        "id": "test",
+                        "single_end": false
+                    },
+                    "test.gfa.gz:md5,798df978a1e1d64a75585e79217b17a7"
+                ]
+            ],
+            [
+                "versions.yml:md5,a2ec8dfa9f8dd51d9adf237ed133a2b3"
+            ],
+            "test.megahit.log"
         ],
         "meta": {
-            "nf-test": "0.8.4",
+            "nf-test": "0.9.0",
             "nextflow": "24.04.4"
         },
-        "timestamp": "2024-09-12T16:45:48.679485983"
+        "timestamp": "2024-09-13T11:53:23.345209603"
     },
-    "sarscov2 - stub": {
+    "stub": {
         "content": [
             {
                 "0": [
@@ -43,10 +79,7 @@
                             "id": "test",
                             "single_end": true
                         },
-                        [
-                            "k21.contigs.fa.gz:md5,68b329da9893e34099c7d8ad5cb9c940",
-                            "k21.final.contigs.fa.gz:md5,68b329da9893e34099c7d8ad5cb9c940"
-                        ]
+                        "test.megahit.log:md5,d41d8cd98f00b204e9800998ecf8427e"
                     ]
                 ],
                 "2": [
@@ -55,47 +88,11 @@
                             "id": "test",
                             "single_end": true
                         },
-                        "k21.addi.fa.gz:md5,68b329da9893e34099c7d8ad5cb9c940"
+                        "test.gfa.gz:md5,68b329da9893e34099c7d8ad5cb9c940"
                     ]
                 ],
                 "3": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "k21.local.fa.gz:md5,68b329da9893e34099c7d8ad5cb9c940"
-                    ]
-                ],
-                "4": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "k21.final.contigs.fa.gz:md5,68b329da9893e34099c7d8ad5cb9c940"
-                    ]
-                ],
-                "5": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "test.log:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "6": [
-                    "versions.yml:md5,e3c0731297c9abe2f495ab6d541ac0e6"
-                ],
-                "addi_contigs": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "k21.addi.fa.gz:md5,68b329da9893e34099c7d8ad5cb9c940"
-                    ]
+                    "versions.yml:md5,a2ec8dfa9f8dd51d9adf237ed133a2b3"
                 ],
                 "contigs": [
                     [
@@ -106,34 +103,13 @@
                         "test.contigs.fa.gz:md5,68b329da9893e34099c7d8ad5cb9c940"
                     ]
                 ],
-                "k_contigs": [
+                "gfa": [
                     [
                         {
                             "id": "test",
                             "single_end": true
                         },
-                        [
-                            "k21.contigs.fa.gz:md5,68b329da9893e34099c7d8ad5cb9c940",
-                            "k21.final.contigs.fa.gz:md5,68b329da9893e34099c7d8ad5cb9c940"
-                        ]
-                    ]
-                ],
-                "kfinal_contigs": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "k21.final.contigs.fa.gz:md5,68b329da9893e34099c7d8ad5cb9c940"
-                    ]
-                ],
-                "local_contigs": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "k21.local.fa.gz:md5,68b329da9893e34099c7d8ad5cb9c940"
+                        "test.gfa.gz:md5,68b329da9893e34099c7d8ad5cb9c940"
                     ]
                 ],
                 "log": [
@@ -142,31 +118,18 @@
                             "id": "test",
                             "single_end": true
                         },
-                        "test.log:md5,d41d8cd98f00b204e9800998ecf8427e"
+                        "test.megahit.log:md5,d41d8cd98f00b204e9800998ecf8427e"
                     ]
                 ],
                 "versions": [
-                    "versions.yml:md5,e3c0731297c9abe2f495ab6d541ac0e6"
+                    "versions.yml:md5,a2ec8dfa9f8dd51d9adf237ed133a2b3"
                 ]
             }
         ],
         "meta": {
-            "nf-test": "0.8.4",
+            "nf-test": "0.9.0",
             "nextflow": "24.04.4"
         },
-        "timestamp": "2024-09-12T16:44:35.245399991"
-    },
-    "sarscov2 - fastq - pe - coassembly": {
-        "content": [
-            true,
-            [
-                "versions.yml:md5,e3c0731297c9abe2f495ab6d541ac0e6"
-            ]
-        ],
-        "meta": {
-            "nf-test": "0.8.4",
-            "nextflow": "24.04.4"
-        },
-        "timestamp": "2024-09-12T16:45:56.23363342"
+        "timestamp": "2024-09-13T11:53:41.821609415"
     }
-}+}

'modules/nf-core/megahit/tests/tags.yml' was removed
************************************************************
