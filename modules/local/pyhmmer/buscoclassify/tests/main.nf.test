nextflow_process {

    name "Test Process PYHMMER_BUSCOCLASSIFY"
    script "../main.nf"
    process "PYHMMER_BUSCOCLASSIFY"

    tag "modules"
    tag "modules_nfcore"
    tag "pyhmmer"
    tag "pyhmmer/buscoclassify"

    test("bacteroides_fragilis - faa") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file("${projectDir}/assets/test-datasets/genomics/prokaryotes/bacteroides_fragilis/illumina/faa/test1.pyrodigalgv.faa.gz", checkIfExists: true),
                ]
                input[1] = file("${projectDir}/assets/hmms/busco_hmms/archaea_buscos.hmm", checkIfExists: true)
                input[2] = file("${projectDir}/assets/hmms/busco_hmms/score_cutoffs/archaea_odb10.cutoffs", checkIfExists: true)
                input[3] = file("${projectDir}/assets/hmms/busco_hmms/bacteria_buscos.hmm", checkIfExists: true)
                input[4] = file("${projectDir}/assets/hmms/busco_hmms/score_cutoffs/bacteria_odb10.cutoffs", checkIfExists: true)
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("bacteroides_fragilis - faa - stub") {
        options "-stub"
        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file("${projectDir}/assets/test-datasets/genomics/prokaryotes/bacteroides_fragilis/illumina/faa/test1.pyrodigalgv.faa.gz", checkIfExists: true),
                ]
                input[1] = file("${projectDir}/assets/hmms/busco_hmms/archaea_buscos.hmm", checkIfExists: true)
                input[2] = file("${projectDir}/assets/hmms/busco_hmms/score_cutoffs/archaea_odb10.cutoffs", checkIfExists: true)
                input[3] = file("${projectDir}/assets/hmms/busco_hmms/bacteria_buscos.hmm", checkIfExists: true)
                input[4] = file("${projectDir}/assets/hmms/busco_hmms/score_cutoffs/bacteria_odb10.cutoffs", checkIfExists: true)
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
