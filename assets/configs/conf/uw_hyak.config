params {
    config_profile_description = "Example config profile used for the University of Washington's Hyak HPC."
    config_profile_contact = 'Carson J. Miller (@CarsonJM)'
    config_profile_url = 'https://hyak.uw.edu/'
}

process {
    resourceLimits = [
        cpus: 32,
        memory: '200.GB',
        time: '72.h'
    ]
    executor = 'slurm'
    // Set the default account for SLURM submission
    clusterOptions = { "-A stf" }

    // Submit to different queues based on the number of attempts
    queue  = { task.attempt < 4 ? (task.attempt < 3 ? 'ckpt' : 'compute' ) : 'cpu-g2-mem2x' }
    // Default options for all process without labels
    cpus   = {  1    * task.attempt, 'cpus'   }
    memory = {  6.GB * task.attempt, 'memory' }
    time   = {  4.h  * task.attempt, 'time'   }

    errorStrategy = { task.exitStatus in ((130..145) + 104 + 250) ? 'retry' : 'finish' }
    maxRetries    = 4
    maxErrors     = '-1'

    // Process-specific resource requirements
    // NOTE - Please try and re-use the labels below as much as possible.
    //        These labels are used and recognised by default in DSL2 files hosted on nf-core/modules.
    //        If possible, it would be nice to keep the same label naming convention when
    //        adding in your local modules too.
    withLabel:process_single {
        cpus   = {  1    * task.attempt, 'cpus'    }
        memory = {  6.GB * task.attempt, 'memory'  }
        time   = {  4.h  * task.attempt, 'time'    }
    }
    withLabel:process_low {
        cpus   = {  2     * task.attempt, 'cpus'    }
        memory = {  12.GB * task.attempt, 'memory'  }
        time   = {  4.h   * task.attempt, 'time'    }
    }
    withLabel:process_medium {
        cpus   = {  6     * task.attempt, 'cpus'    }
        memory = {  36.GB * task.attempt, 'memory'  }
        time   = {  8.h   * task.attempt, 'time'    }
    }
    withLabel:process_high {
        cpus   = {  12    * task.attempt, 'cpus'    }
        memory = {  72.GB * task.attempt, 'memory'  }
        time   = {  8.h   * task.attempt, 'time'    }
    }
    withLabel:process_long {
        cpus   = {  12    * task.attempt, 'cpus'    }
        memory = {  72.GB * task.attempt, 'memory'  }
        time   = {  24.h  * task.attempt, 'time'    }
    }
    withLabel:process_high_memory {
        cpus   = {  12     * task.attempt, 'cpus'    }
        memory = {  250.GB * task.attempt, 'memory'  }
        time   = {  16.h   * task.attempt, 'time'    }
    }
    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }
}

executor {
    queueSize = 100
    submitRateLimit = '1 sec'
}

singularity {
    enabled = true
    autoMounts = true
}
