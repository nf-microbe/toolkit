# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/subworkflows/yaml-schema.json
name: "fastq_readpreprocessing_fastq"
description: Run read preprocessing on FastQ files.
keywords:
  - preprocess
  - quality
  - fastp
  - bowtie2
  - merge
  - cat
components:
  - cat/fastq
  - fastp
  - fastq_bowtie2_fastq
  - fastqc
  - utils_nfmicrobe_functions
  - getworkdirs
  - rmemptyfastqs
input:
  - raw_fastq_gz:
      type: file
      description: |
        Channel containing raw FastQ files to be preprocessed.
        Structure: [ val(meta), [ path(fastq_1), path(fastq_2) ] ]
      pattern: "*.{fastq,fq,fastq.gz,fq.gz}"
  - run_fastp:
      type: boolean
      description: |
        Boolean to determine if FastP should be run on the raw FastQ files.
  - perform_run_merging:
      type: boolean
      description: |
        Boolean to determine if runs from the same sample should be merged.
  - run_bowtie2_host_removal:
      type: boolean
      description: |
        Boolean to determine if reads should be aligned to a reference genome to remove host reads.
  - igenomes:
      type: dictionary
      description: |
        Dictionary containing dictionary mapping igenomes keys and to values.
        Structure: igenomes { 'GRCh37' { fasta = 'path/to/fasta', gtf = 'path/to/gtf' } }
  - igenomes_index:
      type: string
      description: |
        String matching igenomes key to use for downloading bowtie2 index.
        Structure: "GRCh37"
  - fasta_gz:
      type: file
      description: |
        Path to reference FastA file to be used for alignment.
      pattern: "*.{fasta,fna,fa,fasta.gz,fna.gz,fa.gz}"
  - bt2_index:
      type: directory
      description: |
        Path to directory containing bowtie2 index files.
      pattern: "*/*.bt2"
output:
  - preprocessed_fastq_gz:
      type: file
      description: |
        Channel containing FastQ files that have been preprocessed.
        Structure: [ val(meta), [ path(fastq_1), path(fastq_2) ] ]
      pattern: "*.{fastq,fq,fastq.gz,fq.gz}"
  - multiqc_files:
      type: file
      description: |
        Channel containing the files that will be used in MultiQC report.
        Structure: [ val(meta), path(multiqc_files) ]
      pattern: "*"
  - versions:
      type: file
      description: |
        File containing software versions
        Structure: [ path(versions.yml) ]
      pattern: "versions.yml"
  - workdirs_to_clean:
      type: channel
      description: |
        Channel containing work directories that can be cleaned up because
        downstream processes have already been completed.
        Structure: [ meta, path(workdir) ]
      pattern: "**/work/**"

authors:
  - "@CarsonJM"
maintainers:
  - "@CarsonJM"
