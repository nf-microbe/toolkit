# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/subworkflows/yaml-schema.json
name: "fastq_readassembly_fasta"
description: Assembly FastQ using selected combination of assemblers and single/coassembly.
keywords:
  - assembly
  - spades
  - megahit
  - plass
  - penguin
  - contig
  - scaffold
components:
  - cat/fastq
  - megahit
  - plass/penguin
  - spades
  - utils_nfmicrobe_functions

input:
  - fastq_gz:
      type: file
      description: |
        The input channel containing the FastQ files.
        Structure: [ [ meta.id, meta.single_end, meta.group ], [ reads_1.fastq.gz, reads_2.fastq.gz ] ]
      pattern: "*.{fastq,fq,fastq.gz,fq.gz}"
  - run_megahit_single:
      type: boolean
      description: |
        Boolean to determine if megahit single assembly should be run on the FastQ files.
  - run_megahit_coassembly:
      type: boolean
      description: |
        Boolean to determine if megahit coassembly should be run on the FastQ files.
  - run_spades_single:
      type: boolean
      description: |
        Boolean to determine if spades single assembly should be run on the FastQ files.
  - run_spades_coassembly:
      type: boolean
      description: |
        Boolean to determine if spades coassembly should be run on the FastQ files.
  - use_spades_scaffolds:
      type: boolean
      description: |
        Boolean to determine if spades scaffolds (not contigs) should be used.
  - run_penguin_single:
      type: boolean
      description: |
        Boolean to determine if penguin single assembly should be run on the FastQ files.
  - run_penguin_coassembly:
      type: boolean
      description: |
        Boolean to determine if penguin coassembly should be run on the FastQ files.

output:
  - assemblies_fasta_gz:
      type: file
      description: |
        Channel containing assemblies in FastA format.
        Structure: [ val(meta), path(fasta.gz) ]
      pattern: "*.fasta.gz"
  - assembly_graph_gz:
      type: file
      description: |
        Channel containing spades assembly graphs in GFA format.
        Structure: [ val(meta), path(gfa.gz) ]
      pattern: "*.gfa.gz"
  - spades_logs:
      type: file
      description: |
        Channel containing spades log files for downstream analyses.
        Structure: [ val(meta), path(spades.log)) ]
      pattern: "*.spades.log"
  - multiqc_files:
      type: file
      description: |
        Channel containing the files that will be used in MultiQC report.
        Structure: [ val(meta), path(multiqc_files) ]
      pattern: "*"
  - versions:
      type: file
      description: |
        File containing software versions
        Structure: [ path(versions.yml) ]
      pattern: "versions.yml"

authors:
  - "@CarsonJM"
maintainers:
  - "@CarsonJM"
